// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ariesmaulana/payroll/app/user/lib (interfaces: ServiceInterface)
//
// Generated by this command:
//
//	mockgen github.com/ariesmaulana/payroll/app/user/lib ServiceInterface
//

// Package mock_lib is a generated GoMock package.
package mock_lib

import (
	context "context"
	reflect "reflect"

	lib "github.com/ariesmaulana/payroll/app/user/lib"
	gomock "go.uber.org/mock/gomock"
)

// MockServiceInterface is a mock of ServiceInterface interface.
type MockServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockServiceInterfaceMockRecorder is the mock recorder for MockServiceInterface.
type MockServiceInterfaceMockRecorder struct {
	mock *MockServiceInterface
}

// NewMockServiceInterface creates a new mock instance.
func NewMockServiceInterface(ctrl *gomock.Controller) *MockServiceInterface {
	mock := &MockServiceInterface{ctrl: ctrl}
	mock.recorder = &MockServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceInterface) EXPECT() *MockServiceInterfaceMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockServiceInterface) Login(ctx context.Context, in *lib.LoginIn) *lib.LoginOut {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, in)
	ret0, _ := ret[0].(*lib.LoginOut)
	return ret0
}

// Login indicates an expected call of Login.
func (mr *MockServiceInterfaceMockRecorder) Login(ctx, in any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockServiceInterface)(nil).Login), ctx, in)
}

// UserSalary mocks base method.
func (m *MockServiceInterface) UserSalary(ctx context.Context, in *lib.UserSalaryIn) *lib.UserSalaryOut {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserSalary", ctx, in)
	ret0, _ := ret[0].(*lib.UserSalaryOut)
	return ret0
}

// UserSalary indicates an expected call of UserSalary.
func (mr *MockServiceInterfaceMockRecorder) UserSalary(ctx, in any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserSalary", reflect.TypeOf((*MockServiceInterface)(nil).UserSalary), ctx, in)
}
